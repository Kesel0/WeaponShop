// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WeaponShop.Models;

#nullable disable

namespace WeaponShop.Migrations
{
    [DbContext(typeof(WeaponshopContext))]
    partial class WeaponshopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "prodtype", new[] { "Weapon", "Accessory", "Ammo" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("productid")
                .StartsAt(1000L);

            modelBuilder.HasSequence("userid");

            modelBuilder.Entity("WeaponShop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('productid'::regclass)");

                    b.Property<string>("Caliber")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("caliber");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("character varying")
                        .HasColumnName("product_description");

                    b.Property<string>("ProductName")
                        .HasColumnType("character varying")
                        .HasColumnName("product_name");

                    b.Property<double?>("ProductPrice")
                        .HasColumnType("double precision")
                        .HasColumnName("product_price");

                    b.Property<string>("ProductSubtype")
                        .HasColumnType("character varying")
                        .HasColumnName("product_subtype");

                    b.Property<int>("ProductType")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("product_pkey");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("WeaponShop.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('userid'::regclass)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("users_pkey");

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
